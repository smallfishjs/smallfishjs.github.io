(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{211:function(t,e,s){"use strict";s.r(e);var n=s(0),a=Object(n.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"deployment"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deployment","aria-hidden":"true"}},[t._v("#")]),t._v(" Deployment")]),t._v(" "),s("h2",{attrs:{id:"using-docker"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#using-docker","aria-hidden":"true"}},[t._v("#")]),t._v(" Using Docker")]),t._v(" "),s("p",[t._v("Before that, you need to know what "),s("a",{attrs:{href:"https://www.Docker.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Docker"),s("OutboundLink")],1),t._v(" is and install it.")]),t._v(" "),s("p",[t._v("If you choose Docker, then we recommend using nginx as the web container. With a simple configuration you can get a standalone, stable web static server.")]),t._v(" "),s("p",[t._v("If you want to get started quickly, go directly to "),s("a",{attrs:{href:"https://github.com/smallfishjs/smallfish-boilerplates-management-system",target:"_blank",rel:"noopener noreferrer"}},[t._v("Scaffolding"),s("OutboundLink")],1),t._v(" for a real example.")]),t._v(" "),s("p",[t._v("The following will also be combined with this scaffolding to show how to integrate your application into the Docker.")]),t._v(" "),s("h3",{attrs:{id:"created-dockfile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#created-dockfile","aria-hidden":"true"}},[t._v("#")]),t._v(" Created Dockfile")]),t._v(" "),s("p",[t._v("First create a "),s("code",[t._v("Dockerfile")]),t._v(" in your directory to tell Docker how to handle your application, usually like this:")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("FROM nginx "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# to nginx mirroring the basis")]),t._v("\n\nWORKDIR /usr/src/app/ "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Specify your working directory")]),t._v("\n\nCOPY ./Docker/nginx.conf /etc/nginx/conf.d/default.conf "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Replace the custom nginx configuration")]),t._v("\n\nCOPY ./Docker/ssl /etc/nginx/ssl/ "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Replace ssl certificate to support https")]),t._v("\n\nCOPY ./dist /usr/share/nginx/html/ "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Replace dist as a static mapping directory")]),t._v("\n\nEXPOSE 80 443 "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# http port & https port")]),t._v("\n\nCMD "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nginx"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-g"')]),t._v(", "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"daemon off;"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#start nginx")]),t._v("\n")])])]),s("p",[t._v("The above is a basic Dockerfile, from which we can see that we need to create a new "),s("code",[t._v("Docker")]),t._v(" folder in the root directory to store the relevant configuration: "),s("code",[t._v("nginx.conf")]),t._v(" and ssl certificate.")]),t._v(" "),s("h3",{attrs:{id:"configuring-nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#configuring-nginx","aria-hidden":"true"}},[t._v("#")]),t._v(" Configuring Nginx")]),t._v(" "),s("p",[t._v("The nginx example is already configured in the smallfish scaffolding and you can use it directly.")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Listen 80"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# gzip config")]),t._v("\n    Gzip on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    Root /usr/share/nginx/html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    Location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# browserHistory")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#try_files $uri $uri/ /index.html;")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# hashHistory")]),t._v("\n        Index index.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# location /api {")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# proxy_pass [your service host];")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# proxy_set_header X-Forwarded-Proto $scheme;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# proxy_set_header Host $http_host;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# proxy_set_header X-Real-IP $remote_addr;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# }")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https")]),t._v("\nServer "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https + http2")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Âê¨ 443 ssl http2;")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# https")]),t._v("\n    Listen 443 ssl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    Server_name localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# /etc/nginx/nginx.conf")]),t._v("\n    Ssl_certificate /etc/nginx/ssl/server.crt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Ssl_certificate_key /etc/nginx/ssl/server.key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Ssl_session_timeout 5m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    Root /usr/share/nginx/html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    Location / "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# browserHistory")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#try_files $uri $uri/ /index.html;")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# hashHistory")]),t._v("\n        Index index.html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# location /api {")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# proxy_pass [your service host];")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# proxy_set_header X-Forwarded-Proto $scheme;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# proxy_set_header Host $http_host;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# proxy_set_header X-Real-IP $remote_addr;")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# }")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"setting-up-the-deployment-steps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-the-deployment-steps","aria-hidden":"true"}},[t._v("#")]),t._v(" Setting up the deployment steps")]),t._v(" "),s("p",[t._v("In addition to directly packaging the image, we sometimes need to run the image to see if it meets expectations, so we need a "),s("code",[t._v("Docker-compose.yml")]),t._v(" to help us quickly run a Docker service.")]),t._v(" "),s("p",[t._v("Add "),s("code",[t._v("Docker-compose.yml")]),t._v(" under "),s("code",[t._v("Docker")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("Version: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3.5'")]),t._v("\n\nServices:\n  Smallfish-web:\n    Image: nginx\n    Ports:\n      - 80:80\n      - 443:443\n    Container_name: "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'smallfish-web_dev'")]),t._v("\n    Restart: unless-stopped\n    Volumes:\n      - "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v("/dist:/usr/share/nginx/html:ro\n      - ./ssl:/etc/nginx/ssl:ro\n      - ./nginx.conf:/etc/nginx/conf.d/default.conf\n\nVolumes:\n  Dist:\n")])])]),s("p",[t._v("Then add a few commands to our "),s("code",[t._v("package.json")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    ...\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Docker:dev"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Docker-compose -f ./Docker/Docker-compose.yml up"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"Docker:build"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"smallfish build && Docker build -f Dockerfile -t smallfish-web ./"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    ...\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Running "),s("code",[t._v("npm run Docker:dev")]),t._v(" will run the current project in Docker mode, while "),s("code",[t._v("npm run Docker:build")]),t._v(" will build an image that you can deploy to a platform that supports Docker.")]),t._v(" "),s("h3",{attrs:{id:"https-certificate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#https-certificate","aria-hidden":"true"}},[t._v("#")]),t._v(" Https Certificate")]),t._v(" "),s("p",[t._v("The certificate for https can be generated by [openssl] (https://www.openssl.org/source/).")])])},[],!1,null,null,null);e.default=a.exports}}]);