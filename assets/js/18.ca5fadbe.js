(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{217:function(t,e,n){"use strict";n.r(e);var a=n(0),s=Object(a.a)({},function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"directory-structure"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#directory-structure","aria-hidden":"true"}},[t._v("#")]),t._v(" Directory Structure")]),t._v(" "),n("h2",{attrs:{id:"application-directory-structure"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#application-directory-structure","aria-hidden":"true"}},[t._v("#")]),t._v(" Application Directory Structure")]),t._v(" "),n("p",[t._v("In order to standardize the architecture and code quality of the application, smallfish uses a lot of convention alternative code writing in the framework. The following folder or file comment contains a * description that is an agreed directory or file.")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v(".")]),t._v("\n├── config                  // * Application configuration folder\n│ ├── config.js             // * Application configuration, interface proxy, routing, configuration switch, etc.\n│ └── plugin.js             // * Customized smallfish plugin directory\n├── mock                    // * folder where the mock data is stored\n│ └── *.js                  // * Local simulation data\n├── src                     // business code directory\n│ ├── component             // generic component, accessible via "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/component'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alias")]),t._v("\n│ ├── model                 // dva model "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("valid when dva configuration is enabled"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n│ ├── "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v("               // request service, accessible via "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/service'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alias")]),t._v("\n│ ├── util                  // Tool library, accessible via "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/util'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alias")]),t._v("\n│ ├──layout                 // Layout component, accessible via "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'@/layout'")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("alias")]),t._v("\n│ ├── i18n                  // * i18n related data\n│ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ├── zh-CN.js            // * i18n data "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" a single language\n│ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" ├── *.js                // * i18n data "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" a single language\n│ "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" └── index.js            // * i18n language data entry "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n│ └── page                  // * page, the following page can be a folder, or it can be a JS page component\n│ ├── .umi                  // Temporary folder generated by smallfish, no need to submit\n│ └── *                     // Other page component code, refer to the page component structure below\n├── "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),t._v("                    // * Test sample storage folder\n│ └── *.test.js             // * Unit "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),t._v(" file, you need to follow the naming convention of *.test.js\n├── .eslintignore           // * Configure files that need to be ignored by eslint code detection "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("no change required"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n├── .eslintrc               // * Custom eslint rules "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("no change required"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n├── .stylelintrc            // * Custom stylelint rules "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("no changes required"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n├── .gitignore              // * Configuration requires "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" to ignore submitted and modified files\n├── jsconfig.json           // VSCode JS project configuration\n├── .editorconfig           // Editor code style configuration "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("most")]),t._v(" editors\n└── package.json            // * Information configuration such as application dependencies\n")])])]),n("h2",{attrs:{id:"page-directory-structure"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#page-directory-structure","aria-hidden":"true"}},[t._v("#")]),t._v(" page directory structure")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("- page\n  └── "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("SomePage"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    ├── component         // If the page is "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" complex, it can be "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),t._v(" into "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("more")]),t._v(" components\n    ├── index.js          // * page component entry "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v("\n    ├── style.less        // style\n    ├── model.js          // * The page model will be mounted by default. Note that a globally unique namespace is required "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("valid when the dva configuration is enabled"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    ├── model             // * When there are multiple models, you can create a new folder instead of model.js "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("valid when dva configuration is enabled"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    │ └── "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("modelname"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(".js  // * The page model will be mounted by default. Note that you need a globally unique namespace.\n    └── service.js        // page own "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v("\n")])])])])},[],!1,null,null,null);e.default=s.exports}}]);