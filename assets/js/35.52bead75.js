(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{200:function(n,s,t){"use strict";t.r(s);var e=t(0),r=Object(e.a)({},function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h1",{attrs:{id:"构建部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建部署","aria-hidden":"true"}},[n._v("#")]),n._v(" 构建部署")]),n._v(" "),t("h2",{attrs:{id:"使用-docker-来构建部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#使用-docker-来构建部署","aria-hidden":"true"}},[n._v("#")]),n._v(" 使用 docker 来构建部署")]),n._v(" "),t("p",[n._v("在此之前，你需要了解 "),t("a",{attrs:{href:"https://www.docker.com/",target:"_blank",rel:"noopener noreferrer"}},[n._v("docker"),t("OutboundLink")],1),n._v(" 是什么，并且安装它。")]),n._v(" "),t("p",[n._v("如果你选用了 docker，那么我们推荐使用 nginx 作为 web 容器，经过简单的配置你就可以得到一个独立的、稳定的 web 静态服务器。")]),n._v(" "),t("p",[n._v("如果你想快速开始，那么直接移步到 "),t("a",{attrs:{href:"https://github.com/smallfishjs/smallfish-boilerplates-management-system",target:"_blank",rel:"noopener noreferrer"}},[n._v("脚手架"),t("OutboundLink")],1),n._v(" 查看一个真实示例。")]),n._v(" "),t("p",[n._v("下面也将结合这个脚手架说明如何集成你的应用到 docker 中。")]),n._v(" "),t("h3",{attrs:{id:"建立的-dockfile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#建立的-dockfile","aria-hidden":"true"}},[n._v("#")]),n._v(" 建立的 Dockfile")]),n._v(" "),t("p",[n._v("首先在你的更目录下创建 "),t("code",[n._v("Dockerfile")]),n._v("，用来告诉 docker 如何处理你的应用，通常是这样：")]),n._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[n._v("FROM nginx "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 以 nginx 镜像基础")]),n._v("\n\nWORKDIR /usr/src/app/ "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 指定你的工作目录")]),n._v("\n\nCOPY ./docker/nginx.conf /etc/nginx/conf.d/default.conf "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 替换自定义的 nginx 配置")]),n._v("\n\nCOPY ./docker/ssl /etc/nginx/ssl/ "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 替换 ssl 证书以支持 https")]),n._v("\n\nCOPY ./dist  /usr/share/nginx/html/ "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 替换 dist 为静态映射目录")]),n._v("\n\nEXPOSE 80 443 "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# http 端口 & https 端口")]),n._v("\n\nCMD "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[n._v('"nginx"')]),n._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[n._v('"-g"')]),n._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[n._v('"daemon off;"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("]")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[n._v("# 启动 nginx")]),n._v("\n")])])]),t("p",[n._v("以上就是一个最基础的 Dockerfile，可以从里面看出我们需要在根目录新建 "),t("code",[n._v("docker")]),n._v(" 文件夹用来存放相关的配置："),t("code",[n._v("nginx.conf")]),n._v(" 以及 ssl 证书。")]),n._v(" "),t("h3",{attrs:{id:"配置-nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置-nginx","aria-hidden":"true"}},[n._v("#")]),n._v(" 配置 nginx")]),n._v(" "),t("p",[n._v("nginx 的样例在 smallfish 脚手架中已经配置好了，你可以直接使用。")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("server {\n    listen 80;\n    # gzip config\n    gzip on;\n\n    root /usr/share/nginx/html;\n\n    location / {\n        # browserHistory\n        #try_files $uri $uri/ /index.html;\n\n        # hashHistory\n        index index.html;\n    }\n\n    # location /api {\n    #     proxy_pass [your service host];\n    #     proxy_set_header   X-Forwarded-Proto $scheme;\n    #     proxy_set_header   Host              $http_host;\n    #     proxy_set_header   X-Real-IP         $remote_addr;\n    # }\n\n}\n\n# https\nserver {\n    # https + http2\n    # listen 443 ssl http2;\n\n    # https\n    listen 443 ssl;\n\n    server_name localhost;\n\n    # /etc/nginx/nginx.conf\n    ssl_certificate /etc/nginx/ssl/server.crt;\n    ssl_certificate_key /etc/nginx/ssl/server.key;\n    ssl_session_timeout 5m;\n\n    root /usr/share/nginx/html;\n\n    location / {\n        # browserHistory\n        #try_files $uri $uri/ /index.html;\n\n        # hashHistory\n        index index.html;\n    }\n\n    # location /api {\n    #     proxy_pass [your service host];\n    #     proxy_set_header   X-Forwarded-Proto $scheme;\n    #     proxy_set_header   Host              $http_host;\n    #     proxy_set_header   X-Real-IP         $remote_addr;\n    # }\n}\n")])])]),t("h3",{attrs:{id:"设置构建部署步骤"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#设置构建部署步骤","aria-hidden":"true"}},[n._v("#")]),n._v(" 设置构建部署步骤")]),n._v(" "),t("p",[n._v("除了直接打包出镜像以外，我们有时候需要跑起镜像看看是否满足期望，所以我们需要一个 "),t("code",[n._v("docker-compose.yml")]),n._v("，帮我们快速的跑起一个 docker 服务。")]),n._v(" "),t("p",[n._v("在 "),t("code",[n._v("docker")]),n._v(" 下添加 "),t("code",[n._v("docker-compose.yml")]),n._v("：")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("version: '3.5'\n\nservices:\n  smallfish-web:\n    image: nginx\n    ports:\n      - 80:80\n      - 443:443\n    container_name: 'smallfish-web_dev'\n    restart: unless-stopped\n    volumes:\n      - ../dist:/usr/share/nginx/html:ro\n      - ./ssl:/etc/nginx/ssl:ro\n      - ./nginx.conf:/etc/nginx/conf.d/default.conf\n\nvolumes:\n  dist:\n")])])]),t("p",[n._v("然后添加几个命令到我们的 "),t("code",[n._v("package.json")]),n._v("：")]),n._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n  script"),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    ...\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[n._v('"docker:dev"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[n._v('"docker-compose -f ./docker/docker-compose.yml up"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[n._v('"docker:build"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[n._v(":")]),n._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[n._v('"smallfish build && docker build -f Dockerfile -t smallfish-web ./"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v("\n    ...\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v("\n")])])]),t("p",[n._v("运行 "),t("code",[n._v("npm run docker:dev")]),n._v(" 即可将当前项目以 docker 方式运行起来，而 "),t("code",[n._v("npm run docker:build")]),n._v(" 则能构建一个镜像，你可以将它部署到支持 docker 的平台上。")]),n._v(" "),t("h3",{attrs:{id:"https-证书"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#https-证书","aria-hidden":"true"}},[n._v("#")]),n._v(" https 证书")]),n._v(" "),t("p",[n._v("https 的证书可以通过 "),t("a",{attrs:{href:"https://www.openssl.org/source/",target:"_blank",rel:"noopener noreferrer"}},[n._v("openssl"),t("OutboundLink")],1),n._v(" 生成。")])])},[],!1,null,null,null);s.default=r.exports}}]);